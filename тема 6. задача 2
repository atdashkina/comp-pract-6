import numpy as np

# Функция, которую нужно минимизировать
def f(x):
    return x[0]**2 + np.exp(x[0]**2 + x[1]**2) + 4 * x[0] + 3 * x[1]

# Градиент функции
def grad_f(x):
    df_dx1 = 2 * x[0] + np.exp(x[0]**2 + x[1]**2) * 2 * x[0] + 4
    df_dx2 = np.exp(x[0]**2 + x[1]**2) * 2 * x[1] + 3
    return np.array([df_dx1, df_dx2])

# Метод наискорейшего спуска
def steepest_descent(x0, alpha, max_iter):
    x = x0
    for _ in range(max_iter):
        grad = grad_f(x)
        x = x - alpha * grad
    return x

# Начальное приближение и параметры метода
x0 = np.array([1.0, 1.0])
alpha = 0.01
max_iter = 1000

# Поиск минимума
x_min = steepest_descent(x0, alpha, max_iter)

print("Минимум достигается в точке:", x_min)
print("Значение функции в минимуме:", f(x_min))
